'use strict'

//const GPIO = require('./lib/RPi-GPIO.js')
const Mam = require('../lib/mam.client.js')
const { asciiToTrytes, trytesToAscii } = require('@iota/converter')
const mode = 'public'
const provider = 'https://nodes.devnet.iota.org'
const mamExplorerLink = `https://mam-explorer.firebaseapp.com/?provider=${encodeURIComponent(provider)}&mode=${mode}&root=`
// Initialise MAM State
let mamState = Mam.init(provider, 'AGJYELWSYPSCGWRJARUDP9PSHMDXCCN9IFWLXMIARCLPSNQIPOAV9SUTRPOJXRARBWQVCULJPPGPAAVUS')

let timeLoop,date,
	i=1

if( process.argv[2] == undefined){          //Getting the time in seconds for the loop
  timeLoop = 5000                      //default 1 minute
} else {
  timeLoop = process.argv[2]*1000
}

//mam function
const publish = async packet => {
  let message = Mam.create(mamState, packet)
  mamState = message.state
  console.log('Root: ', message.root)
  await Mam.attach(message.payload, message.address)
}

const publishTangle = function(jsonObject){
	let dataT = asciiToTrytes(JSON.stringify(jsonObject))
	publish(dataT)
}
//Create a JSON as message

function start(){
	const time = Date.now();
	let message = {
			'MS-1 Status' : 'x',
			'MS-1 Voltage' : 'x',
			'MS-1 Power' : 'x',
			'MS-2 Status' : 'x',
			'MS-2 Voltage' : 'x',
			'MS-2 Power' : 'x',
			'MS-3 Status' : 'x',
			'MS-3 Voltage' : 'x',
			'MS-3 Power' : 'x',
			};
	publishTangle(message);
	console.log('Start sending data to Tangle...')
	let messageS = JSON.stringify(message)
	console.log('Message: %s',messageS)
	console.log('Message in trytes: ' + asciiToTrytes(messageS))
	console.log('--------------------------------------------------------------------------------------------------------------------')
	i++
}

setInterval(function(){
	start()
},timeLoop)
