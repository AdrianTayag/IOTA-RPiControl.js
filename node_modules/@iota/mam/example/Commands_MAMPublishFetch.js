//WIP: onoff function for commands, islanding and disable/enable MS
const Gpio = require('onoff').Gpio
const MS1t = new Gpio(7, 'in', 'both', {debounceTimeout: 10})
const MS2t = new Gpio(11, 'in', 'both', {debounceTimeout: 10})
const MS3t = new Gpio(13, 'in', 'both', {debounceTimeout: 10})

const Mam = require('../lib/mam.client.js')
const { asciiToTrytes, trytesToAscii } = require('@iota/converter')

const mode = 'public'
const provider = 'https://nodes.devnet.iota.org'

const mamExplorerLink = `https://mam-explorer.firebaseapp.com/?provider=${encodeURIComponent(provider)}&mode=${mode}&root=`

// Initialise MAM State
let mamState = Mam.init(provider)

// Publish to tangle
const publish = async packet => {
    // Create MAM Payload - STRING OF TRYTES
    const trytes = asciiToTrytes(JSON.stringify(packet))
    const message = Mam.create(mamState, trytes)

    // Save new mamState
    mamState = message.state
    // Attach the payload
    await Mam.attach(message.payload, message.address, 3, 9, 'Bins')

    console.log('Published at ', Date().toLocaleString(), packet, '\n');
    console.log('Root: ', message.root, '\n');
    return message.root
}

const publishAll = async () => {
  const root = await publish({
    message: 'Status Report',
    timestamp: (new Date()).toLocaleString()
    //insert variable depending on commands
  })
  return root
}

// Callback used to pass data out of the fetch
const logData = data => console.log('Fetched and parsed at ', Date().toLocaleString(), '\n', JSON.parse(trytesToAscii(data)), '\n')

publishAll()
  .then(async root => {

    // Output asyncronously using "logData" callback function
    //await Mam.fetch(root, mode, null, logData)
    //prepping data for command
    const result = await Mam.fetch(root, mode)
    var command
    result.messages.forEach(message => command =  JSON.parse(trytesToAscii(message)))
    //islanding Command
    //enable/disable MS


    // Output syncronously once fetch is completed
    //const result = await Mam.fetch(root, mode)
    //result.messages.forEach(message => console.log('Fetched and parsed at ', Date().toLocaleString(), '\n', JSON.parse(trytesToAscii(message)), '\n'))

    console.log(`Verify with MAM Explorer:\n${mamExplorerLink}${root}\n`);
  })
