//Node.js GPIO Script for Protection Manager
/*Pin Mapping:
PCC - 19
SD - 21
B1 to B4 - 23,27,29,31
MS_1 to MS_3 - 33,35,37
Zone 1 to Zone 7 Fault - 24,26,28,32,36,38,40
*/
const Gpio = require('onoff').Gpio
//Breakers, connect to normally closed (NC)
const PCC = new Gpio(19, 'out')
const SD = new Gpio(21, 'out')
const B1 = new Gpio(23, 'out')
const B2 = new Gpio(27, 'out')
const B3 = new Gpio(29, 'out')
const B4 = new Gpio(31, 'out')
//Zone Fault Triggers
const Z1 = new Gpio(24, 'in', 'both', {debounceTimeout: 10})
const Z2 = new Gpio(26, 'in', 'both', {debounceTimeout: 10})
const Z3 = new Gpio(28, 'in', 'both', {debounceTimeout: 10})
const Z4 = new Gpio(32, 'in', 'both', {debounceTimeout: 10})
const Z5 = new Gpio(36, 'in', 'both', {debounceTimeout: 10})
const Z6 = new Gpio(38, 'in', 'both', {debounceTimeout: 10})
const Z7 = new Gpio(40, 'in', 'both', {debounceTimeout: 10})

//Islanding Function
const Island = (x) => {
  SD.writeSync(x)
}
//Fault Watcher
Z1.watch((err, value) => {
  if (err) {
    throw err
  }
  PCC.writeSync(value)
  Island(value)
})

Z2.watch((err, value) => {
  if (err) {
    throw err
  }
  SD.writeSync(value)
  B1.writeSync(value)
})

Z3.watch((err, value) => {
  if (err) {
    throw err
  }
  B1.writeSync(value)
  B2.writeSync(value)
})

Z4.watch((err, value) => {
  if (err) {
    throw err
  }
  B2.writeSync(value)
})

Z5.watch((err, value) => {
  if (err) {
    throw err
  }
  B3.writeSync(value)
  B4.writeSync(value)
})

Z6.watch((err, value) => {
  if (err) {
    throw err
  }
  B4.writeSync(value)
})

Z7.watch((err, value) => {
  if (err) {
    throw err
  }
  PCC.writeSync(value)
  Island(value)
})
