//Node.js GPIO Script for Protection Manager, not needed to be concurrently run.
//WIP: Enter service criteria, voltage tripping req

/*Pin Mapping:
PCC - 19
SD - 21
B1 to B4 - 23,27,29,31
MS_1 to MS_3 - 33,35,37
Zone 1 to Zone 7 Fault - 24,26,28,32,36,38,40
*/
// this script needs to have a looper function for sending to MAM. Dependent script.

const ina219_1 = require('ina219')
const ina219_2 = require('ina219')
const ina219_3 = require('ina219')
const i2c = require('i2c-bus')
//INA219
const MS_1_ADDR = 0x40
const MS_2_ADDR = 0x41
const MS_3_ADDR = 0x42


var ms1v, ms1p, ms2v, ms2p, ms3v, ms3p
var stats = {
  'MS1_V': ms1v,
  'MS1_P': ms1p,
  'MS2_V': ms2v,
  'MS2_P': ms2p,
  'MS3_V': ms3v,
  'MS3_P': ms3p,
}

//measures MS outputs
function status () {
  ina219_1.init(MS_1_ADDR)
  ina219_2.init(MS_2_ADDR)
  ina219_3.init(MS_3_ADDR)
  ina219_1.calibrate32V1A()
  ina219_2.calibrate32V1A()
  ina219_3.calibrate32V1A()

  ms1v = ina219_1.getBustVoltage_V()
  ms1p = ina219_1.getBustVoltage_V() * ina219_1.getCurrent_mA() //milliwatts
  ms2v = ina219_2.getBustVoltage_V()
  ms2p = ina219_2.getBustVoltage_V() * ina219_2.getCurrent_mA()
  ms3v = ina219_3.getBustVoltage_V()
  ms3p = ina219_3.getBustVoltage_V() * ina219_3.getCurrent_mA()

  console.log(stats)
  return stats
}

setInterval(function(){
	status()
},5000)
